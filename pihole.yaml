---
apiVersion: v1
kind: ConfigMap
metadata:
 name: pihole-white
 namespace: pihole
data:
 whitelist.txt: |
  console.cloud.google.com
  www3.l.google.com
  fonts.googleapis.com
  fonts.gstatic.com
  www.googletagmanager.com
  electrum.org
  reddit.com
  maps.googleapis.com
  maps.gstatic.com
  shopify.com
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: pihole-ads
 namespace: pihole
data:
 adlists.list: |
  https://gitlab.com/youvegotmoxie/pihole/-/raw/master/blocklist.txt
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: pihole-regex
 namespace: pihole
data:
 regex.list: |
  (\.|^)yahoomobile\.com$
  (\.|^)www\.yahoomobile\.com$
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: pihole-vars
 namespace: pihole
data:
 TZ: "America/Chicago"
 DNS1: 1.1.1.1
 DNS2: 8.8.8.8
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: pihole
 namespace: pihole
spec:
 replicas: 1
 selector:
  matchLabels:
   app: pihole
 strategy:
  type: RollingUpdate
  rollingUpdate:
   maxSurge: 2
   maxUnavailable: 0
 template:
  metadata:
   labels:
    app: pihole
  spec:
   affinity:
    nodeAffinity:
     requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/pi-type
          operator: In
          values:
           - nopi
   tolerations:
   - key: dedicated
     operator: "Equal"
     value: intel
     effect: "NoSchedule"
   containers:
    - name: pihole
      image: docker.io/pihole/pihole:latest
      resources:
       limits:
        memory: 128Mi
        cpu: 200m
       requests:
        memory: 75Mi
        cpu: 100m
      ports:
       - containerPort: 80
      lifecycle:
       postStart:
        exec:
         command: ['/bin/sh', '-c', '/bin/rm -f /etc/pihole/gravity.db']
      env:
       - name: TZ
         valueFrom:
          configMapKeyRef:
           name: pihole-vars
           key: TZ
       - name: DNS1
         valueFrom:
          configMapKeyRef:
           name: pihole-vars
           key: DNS1
       - name: DNS2
         valueFrom:
          configMapKeyRef:
           name: pihole-vars
           key: DNS2
       - name: WEBPASSWORD
         valueFrom:
          secretKeyRef:
           name: pihole-secret
           key: password
      volumeMounts:
       - name: pihole-white
         mountPath: "/etc/pihole/whitelist.txt"
         subPath: whitelist.txt
       - name: pihole-ads
         mountPath: "/etc/pihole/adlists.list"
         subPath: adlists.list
       - name: pihole-regex
         mountPath: "/etc/pihole/regex.list"
         subPath: regex.list
      readinessProbe:
       exec:
        command: ['dig', '@127.0.0.1', 'google.com']
       timeoutSeconds: 10
       initialDelaySeconds: 5
       periodSeconds: 30
      livenessProbe:
       tcpSocket:
        port: 80
       initialDelaySeconds: 15
       timeoutSeconds: 10
       periodSeconds: 120
       failureThreshold: 3
   volumes:
    - name: pihole-white
      configMap:
       name: pihole-white
       items:
        - key: whitelist.txt
          path: whitelist.txt
    - name: pihole-ads
      configMap:
       name: pihole-ads
       items:
        - key: adlists.list
          path: adlists.list
    - name: pihole-regex
      configMap:
       name: pihole-regex
       items:
        - key: regex.list
          path: regex.list
    - name: pihole-vars
      configMap:
       name: pihole-vars
---
apiVersion: v1
kind: Service
metadata:
 name: pihole-service-tcp
 namespace: pihole
 annotations:
spec:
 selector:
  app: pihole
 ports:
  - name: web
    protocol: TCP
    port: 8080
    targetPort: 80
 type: NodePort
 externalTrafficPolicy: Local
---
apiVersion: v1
kind: Service
metadata:
 name: pihole-service-udp
 namespace: pihole
spec:
 selector:
  app: pihole
 ports:
  - protocol: UDP
    port: 53
    targetPort: 53
 type: LoadBalancer
 externalTrafficPolicy: Local
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-ingress
  namespace: pihole
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: "true"
spec:
  tls:
   - secretName: pihole-tls
     hosts:
      - pihole.donthurt.us
  rules:
  - host: pihole.donthurt.us
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: pihole-service-tcp
            port:
              number: 8080
